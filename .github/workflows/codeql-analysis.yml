# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "CodeQL"

# workflowsÂ´ñ‰∫ÜzzÂ§ß‰Ω¨‰ª•ÂèänihuiÁöÑ‰ªìÂ∫ì

on:
  push:
    branches: [master]
    paths-ignore: ['**.md']
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
    paths-ignore: ['**.md']
  schedule:
    - cron: '0 20 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: cancel-previous-runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file. 
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
#     - name: Autobuild
#       uses: github/codeql-action/autobuild@v1
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Install googletest
      shell: bash
      run: |
        git clone https://github.com/google/googletest --depth 1
        cd googletest
        mkdir build && cd build
        if [ '${{runner.os}}' == 'Windows' ]; then
          echo "Yes, this is on Windows"
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/googletest-install -Dgtest_force_shared_crt=ON -G "Visual Studio 16 2019" -A x64
        else
          echo "Ohh, this is not on Windows"
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/googletest-install -G Ninja
        fi
        cmake --build . --config ${{env.BUILD_TYPE}} -j 2
        cmake --install . --config ${{env.BUILD_TYPE}}
    - name: CMake configure
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DGTEST_ROOT=${{github.workspace}}/googletest-install
    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
